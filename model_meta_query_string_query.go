/*
Zinc Search engine API

Zinc Search engine API documents https://zincsearch-docs.zinc.dev

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetaQueryStringQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaQueryStringQuery{}

// MetaQueryStringQuery struct for MetaQueryStringQuery
type MetaQueryStringQuery struct {
	Analyzer     *string  `json:"analyzer,omitempty"`
	Boost        *float32 `json:"boost,omitempty"`
	DefaultField *string  `json:"default_field,omitempty"`
	// or(default), and
	DefaultOperator *string  `json:"default_operator,omitempty"`
	Fields          []string `json:"fields,omitempty"`
	Query           *string  `json:"query,omitempty"`
}

// NewMetaQueryStringQuery instantiates a new MetaQueryStringQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaQueryStringQuery() *MetaQueryStringQuery {
	this := MetaQueryStringQuery{}
	return &this
}

// NewMetaQueryStringQueryWithDefaults instantiates a new MetaQueryStringQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaQueryStringQueryWithDefaults() *MetaQueryStringQuery {
	this := MetaQueryStringQuery{}
	return &this
}

// GetAnalyzer returns the Analyzer field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetAnalyzer() string {
	if o == nil || IsNil(o.Analyzer) {
		var ret string
		return ret
	}
	return *o.Analyzer
}

// GetAnalyzerOk returns a tuple with the Analyzer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetAnalyzerOk() (*string, bool) {
	if o == nil || IsNil(o.Analyzer) {
		return nil, false
	}
	return o.Analyzer, true
}

// HasAnalyzer returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasAnalyzer() bool {
	if o != nil && !IsNil(o.Analyzer) {
		return true
	}

	return false
}

// SetAnalyzer gets a reference to the given string and assigns it to the Analyzer field.
func (o *MetaQueryStringQuery) SetAnalyzer(v string) {
	o.Analyzer = &v
}

// GetBoost returns the Boost field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetBoost() float32 {
	if o == nil || IsNil(o.Boost) {
		var ret float32
		return ret
	}
	return *o.Boost
}

// GetBoostOk returns a tuple with the Boost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetBoostOk() (*float32, bool) {
	if o == nil || IsNil(o.Boost) {
		return nil, false
	}
	return o.Boost, true
}

// HasBoost returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasBoost() bool {
	if o != nil && !IsNil(o.Boost) {
		return true
	}

	return false
}

// SetBoost gets a reference to the given float32 and assigns it to the Boost field.
func (o *MetaQueryStringQuery) SetBoost(v float32) {
	o.Boost = &v
}

// GetDefaultField returns the DefaultField field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetDefaultField() string {
	if o == nil || IsNil(o.DefaultField) {
		var ret string
		return ret
	}
	return *o.DefaultField
}

// GetDefaultFieldOk returns a tuple with the DefaultField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetDefaultFieldOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultField) {
		return nil, false
	}
	return o.DefaultField, true
}

// HasDefaultField returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasDefaultField() bool {
	if o != nil && !IsNil(o.DefaultField) {
		return true
	}

	return false
}

// SetDefaultField gets a reference to the given string and assigns it to the DefaultField field.
func (o *MetaQueryStringQuery) SetDefaultField(v string) {
	o.DefaultField = &v
}

// GetDefaultOperator returns the DefaultOperator field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetDefaultOperator() string {
	if o == nil || IsNil(o.DefaultOperator) {
		var ret string
		return ret
	}
	return *o.DefaultOperator
}

// GetDefaultOperatorOk returns a tuple with the DefaultOperator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetDefaultOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultOperator) {
		return nil, false
	}
	return o.DefaultOperator, true
}

// HasDefaultOperator returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasDefaultOperator() bool {
	if o != nil && !IsNil(o.DefaultOperator) {
		return true
	}

	return false
}

// SetDefaultOperator gets a reference to the given string and assigns it to the DefaultOperator field.
func (o *MetaQueryStringQuery) SetDefaultOperator(v string) {
	o.DefaultOperator = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetFields() []string {
	if o == nil || IsNil(o.Fields) {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *MetaQueryStringQuery) SetFields(v []string) {
	o.Fields = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *MetaQueryStringQuery) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaQueryStringQuery) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *MetaQueryStringQuery) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *MetaQueryStringQuery) SetQuery(v string) {
	o.Query = &v
}

func (o MetaQueryStringQuery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaQueryStringQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Analyzer) {
		toSerialize["analyzer"] = o.Analyzer
	}
	if !IsNil(o.Boost) {
		toSerialize["boost"] = o.Boost
	}
	if !IsNil(o.DefaultField) {
		toSerialize["default_field"] = o.DefaultField
	}
	if !IsNil(o.DefaultOperator) {
		toSerialize["default_operator"] = o.DefaultOperator
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableMetaQueryStringQuery struct {
	value *MetaQueryStringQuery
	isSet bool
}

func (v NullableMetaQueryStringQuery) Get() *MetaQueryStringQuery {
	return v.value
}

func (v *NullableMetaQueryStringQuery) Set(val *MetaQueryStringQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaQueryStringQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaQueryStringQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaQueryStringQuery(val *MetaQueryStringQuery) *NullableMetaQueryStringQuery {
	return &NullableMetaQueryStringQuery{value: val, isSet: true}
}

func (v NullableMetaQueryStringQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaQueryStringQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

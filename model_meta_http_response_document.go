/*
Zinc Search engine API

Zinc Search engine API documents https://zincsearch-docs.zinc.dev

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetaHTTPResponseDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaHTTPResponseDocument{}

// MetaHTTPResponseDocument struct for MetaHTTPResponseDocument
type MetaHTTPResponseDocument struct {
	Id      *string `json:"id,omitempty"`
	Index   *string `json:"index,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewMetaHTTPResponseDocument instantiates a new MetaHTTPResponseDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaHTTPResponseDocument() *MetaHTTPResponseDocument {
	this := MetaHTTPResponseDocument{}
	return &this
}

// NewMetaHTTPResponseDocumentWithDefaults instantiates a new MetaHTTPResponseDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaHTTPResponseDocumentWithDefaults() *MetaHTTPResponseDocument {
	this := MetaHTTPResponseDocument{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetaHTTPResponseDocument) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaHTTPResponseDocument) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetaHTTPResponseDocument) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetaHTTPResponseDocument) SetId(v string) {
	o.Id = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *MetaHTTPResponseDocument) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaHTTPResponseDocument) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *MetaHTTPResponseDocument) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *MetaHTTPResponseDocument) SetIndex(v string) {
	o.Index = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MetaHTTPResponseDocument) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaHTTPResponseDocument) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MetaHTTPResponseDocument) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MetaHTTPResponseDocument) SetMessage(v string) {
	o.Message = &v
}

func (o MetaHTTPResponseDocument) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaHTTPResponseDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableMetaHTTPResponseDocument struct {
	value *MetaHTTPResponseDocument
	isSet bool
}

func (v NullableMetaHTTPResponseDocument) Get() *MetaHTTPResponseDocument {
	return v.value
}

func (v *NullableMetaHTTPResponseDocument) Set(val *MetaHTTPResponseDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaHTTPResponseDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaHTTPResponseDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaHTTPResponseDocument(val *MetaHTTPResponseDocument) *NullableMetaHTTPResponseDocument {
	return &NullableMetaHTTPResponseDocument{value: val, isSet: true}
}

func (v NullableMetaHTTPResponseDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaHTTPResponseDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

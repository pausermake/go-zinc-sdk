/*
Zinc Search engine API

Zinc Search engine API documents https://zincsearch-docs.zinc.dev

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetaHttpRetriesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaHttpRetriesResponse{}

// MetaHttpRetriesResponse struct for MetaHttpRetriesResponse
type MetaHttpRetriesResponse struct {
	Bulk   *int32 `json:"bulk,omitempty"`
	Search *int32 `json:"search,omitempty"`
}

// NewMetaHttpRetriesResponse instantiates a new MetaHttpRetriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaHttpRetriesResponse() *MetaHttpRetriesResponse {
	this := MetaHttpRetriesResponse{}
	return &this
}

// NewMetaHttpRetriesResponseWithDefaults instantiates a new MetaHttpRetriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaHttpRetriesResponseWithDefaults() *MetaHttpRetriesResponse {
	this := MetaHttpRetriesResponse{}
	return &this
}

// GetBulk returns the Bulk field value if set, zero value otherwise.
func (o *MetaHttpRetriesResponse) GetBulk() int32 {
	if o == nil || IsNil(o.Bulk) {
		var ret int32
		return ret
	}
	return *o.Bulk
}

// GetBulkOk returns a tuple with the Bulk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaHttpRetriesResponse) GetBulkOk() (*int32, bool) {
	if o == nil || IsNil(o.Bulk) {
		return nil, false
	}
	return o.Bulk, true
}

// HasBulk returns a boolean if a field has been set.
func (o *MetaHttpRetriesResponse) HasBulk() bool {
	if o != nil && !IsNil(o.Bulk) {
		return true
	}

	return false
}

// SetBulk gets a reference to the given int32 and assigns it to the Bulk field.
func (o *MetaHttpRetriesResponse) SetBulk(v int32) {
	o.Bulk = &v
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *MetaHttpRetriesResponse) GetSearch() int32 {
	if o == nil || IsNil(o.Search) {
		var ret int32
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaHttpRetriesResponse) GetSearchOk() (*int32, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *MetaHttpRetriesResponse) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given int32 and assigns it to the Search field.
func (o *MetaHttpRetriesResponse) SetSearch(v int32) {
	o.Search = &v
}

func (o MetaHttpRetriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaHttpRetriesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bulk) {
		toSerialize["bulk"] = o.Bulk
	}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	return toSerialize, nil
}

type NullableMetaHttpRetriesResponse struct {
	value *MetaHttpRetriesResponse
	isSet bool
}

func (v NullableMetaHttpRetriesResponse) Get() *MetaHttpRetriesResponse {
	return v.value
}

func (v *NullableMetaHttpRetriesResponse) Set(val *MetaHttpRetriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaHttpRetriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaHttpRetriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaHttpRetriesResponse(val *MetaHttpRetriesResponse) *NullableMetaHttpRetriesResponse {
	return &NullableMetaHttpRetriesResponse{value: val, isSet: true}
}

func (v NullableMetaHttpRetriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaHttpRetriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

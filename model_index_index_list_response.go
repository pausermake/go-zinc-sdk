/*
Zinc Search engine API

Zinc Search engine API documents https://zincsearch-docs.zinc.dev

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndexIndexListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexIndexListResponse{}

// IndexIndexListResponse struct for IndexIndexListResponse
type IndexIndexListResponse struct {
	List []map[string]interface{} `json:"list,omitempty"`
	Page *MetaPage                `json:"page,omitempty"`
}

// NewIndexIndexListResponse instantiates a new IndexIndexListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexIndexListResponse() *IndexIndexListResponse {
	this := IndexIndexListResponse{}
	return &this
}

// NewIndexIndexListResponseWithDefaults instantiates a new IndexIndexListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexIndexListResponseWithDefaults() *IndexIndexListResponse {
	this := IndexIndexListResponse{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *IndexIndexListResponse) GetList() []map[string]interface{} {
	if o == nil || IsNil(o.List) {
		var ret []map[string]interface{}
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexIndexListResponse) GetListOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *IndexIndexListResponse) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []map[string]interface{} and assigns it to the List field.
func (o *IndexIndexListResponse) SetList(v []map[string]interface{}) {
	o.List = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *IndexIndexListResponse) GetPage() MetaPage {
	if o == nil || IsNil(o.Page) {
		var ret MetaPage
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexIndexListResponse) GetPageOk() (*MetaPage, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *IndexIndexListResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given MetaPage and assigns it to the Page field.
func (o *IndexIndexListResponse) SetPage(v MetaPage) {
	o.Page = &v
}

func (o IndexIndexListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexIndexListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableIndexIndexListResponse struct {
	value *IndexIndexListResponse
	isSet bool
}

func (v NullableIndexIndexListResponse) Get() *IndexIndexListResponse {
	return v.value
}

func (v *NullableIndexIndexListResponse) Set(val *IndexIndexListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexIndexListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexIndexListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexIndexListResponse(val *IndexIndexListResponse) *NullableIndexIndexListResponse {
	return &NullableIndexIndexListResponse{value: val, isSet: true}
}

func (v NullableIndexIndexListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexIndexListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

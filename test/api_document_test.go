/*
Zinc Search engine API

Testing DocumentAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_DocumentAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DocumentAPIService Bulk", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DocumentAPI.Bulk(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService Bulkv2", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DocumentAPI.Bulkv2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService DeleteDocument", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string
		var id string

		resp, httpRes, err := apiClient.DocumentAPI.DeleteDocument(context.Background(), index, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService ESBulk", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DocumentAPI.ESBulk(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService GetDocument", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string
		var id string

		resp, httpRes, err := apiClient.DocumentAPI.GetDocument(context.Background(), index, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService IndexDocument", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string

		resp, httpRes, err := apiClient.DocumentAPI.IndexDocument(context.Background(), index).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService IndexDocumentWithID", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string
		var id string

		resp, httpRes, err := apiClient.DocumentAPI.IndexDocumentWithID(context.Background(), index, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService Multi", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string

		resp, httpRes, err := apiClient.DocumentAPI.Multi(context.Background(), index).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DocumentAPIService UpdateDocument", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var index string
		var id string

		resp, httpRes, err := apiClient.DocumentAPI.UpdateDocument(context.Background(), index, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
